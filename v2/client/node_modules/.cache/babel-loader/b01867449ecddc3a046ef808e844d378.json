{"ast":null,"code":"var _jsxFileName = \"/media/dharunvs/Partition_01/__Github__/__Centigrade__/Agroxpert/v2/client/src/pages/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport fb from \"../../services/firebase\";\nimport { Formik, Form } from \"formik\";\nimport { initialValues, validationSchema } from \"./formikConfig\";\nimport { FormFieldClass } from \"../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useHistory();\n  const [serverError, setServerError] = useState(\"\");\n\n  const login = ({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    fb.auth.signInWithEmailAndPassword(email, password).then(res => {\n      if (!res.user) {\n        setServerError(\"Trouble logging in.\");\n      }\n    }).catch(err => {\n      if (err.code === \"auth/wrong-password\") {\n        setServerError(\"Invalid credentials\");\n      } else if (err.code === \"auth/user-not-found\") {\n        setServerError(\"Email not registered\");\n      } else {\n        setServerError(\"Something went wrong\");\n      }\n\n      return err;\n    }).then(err => {\n      if (!err) {\n        history.push(\"/\");\n      }\n    }).finally(err => {\n      var _fb$auth$currentUser;\n\n      setSubmitting(false);\n      localStorage.setItem(\"userId\", (_fb$auth$currentUser = fb.auth.currentUser) === null || _fb$auth$currentUser === void 0 ? void 0 : _fb$auth$currentUser.uid);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AuthForm\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: login,\n      validateOnMount: true,\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      children: ({\n        isValid,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Log in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldClass.FormField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\",\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldClass.FormField, {\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"authButton\",\n          disabled: isSubmitting || !isValid,\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serverErrorContainer\",\n          children: /*#__PURE__*/_jsxDEV(FormFieldClass.ServerError, {\n            serverError: serverError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authLinkContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"authLink\",\n              onClick: () => {\n                history.push(\"signup\");\n              },\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"bpdASyRvpzpF5Fi52n+/LdXtas4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/media/dharunvs/Partition_01/__Github__/__Centigrade__/Agroxpert/v2/client/src/pages/Login/Login.jsx"],"names":["useState","useHistory","fb","Formik","Form","initialValues","validationSchema","FormFieldClass","Login","history","serverError","setServerError","login","email","password","setSubmitting","auth","signInWithEmailAndPassword","then","res","user","catch","err","code","push","finally","localStorage","setItem","currentUser","uid","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport fb from \"../../services/firebase\";\nimport { Formik, Form } from \"formik\";\nimport { initialValues, validationSchema } from \"./formikConfig\";\nimport { FormFieldClass } from \"../../components\";\n\nfunction Login() {\n  const history = useHistory();\n  const [serverError, setServerError] = useState(\"\");\n\n  const login = ({ email, password }, { setSubmitting }) => {\n    fb.auth\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        if (!res.user) {\n          setServerError(\"Trouble logging in.\");\n        }\n      })\n      .catch((err) => {\n        if (err.code === \"auth/wrong-password\") {\n          setServerError(\"Invalid credentials\");\n        } else if (err.code === \"auth/user-not-found\") {\n          setServerError(\"Email not registered\");\n        } else {\n          setServerError(\"Something went wrong\");\n        }\n        return err;\n      })\n      .then((err) => {\n        if (!err) {\n          history.push(\"/\");\n        }\n      })\n      .finally((err) => {\n        setSubmitting(false);\n\n        localStorage.setItem(\"userId\", fb.auth.currentUser?.uid);\n      });\n  };\n\n  return (\n    <div className=\"AuthForm\">\n      <Formik\n        onSubmit={login}\n        validateOnMount={true}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Form>\n            <h1>Log in to your account</h1>\n\n            <FormFieldClass.FormField\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"on\"\n            />\n            <FormFieldClass.FormField\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n            />\n\n            <button\n              className=\"authButton\"\n              disabled={isSubmitting || !isValid}\n              type=\"submit\"\n            >\n              Log in\n            </button>\n            <div className=\"serverErrorContainer\">\n              <FormFieldClass.ServerError serverError={serverError} />\n            </div>\n            <div className=\"authLinkContainer\">\n              <p>\n                Don't have an account?{\" \"}\n                <span\n                  className=\"authLink\"\n                  onClick={() => {\n                    history.push(\"signup\");\n                  }}\n                >\n                  Signup\n                </span>\n              </p>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}